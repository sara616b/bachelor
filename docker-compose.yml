--- # yamllint disable-line
version: "3.9"

services:
  database:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    networks:
      - dbnetwork
    restart: always
  website:
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - SITE=website
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    working_dir: /app/project
    volumes:
      - media:/app/project/media/
      - static:/app/project/static/
      - .:/app/
    command: sh -c 'python manage.py check && python manage.py runserver 0.0.0.0:8000' # yamllint disable-line
    ports:
      - "8002:8000"
    depends_on:
      - database
      # - assets
    restart: always
    links:
      - database:database
    networks:
      - dbnetwork
      - webnetwork
  cms:
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - SITE=cms
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    working_dir: /app/project
    volumes:
      - media:/app/project/media/
      - static:/app/project/static/
      - .:/app/
    command: sh -c 'python manage.py check && python manage.py runserver 0.0.0.0:8000' # yamllint disable-line
    ports:
      - "8001:8000"
    depends_on:
      - database
      - cms-assets
    links:
      - database:database
    restart: always
    networks:
      - dbnetwork
      - webnetwork
  cms-assets:
    build:
      context: ./
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - media:/app/project/media/
      - static:/app/project/static/
      - .:/app/
    command: sh -c './tailwindcss-linux-x64 -i ./project/project/static/Cms/input.css -o ./project/project/static/Cms/output.css --watch' # yamllint disable-line
    # ./tailwindcss -i input.css -o output.css --minify
    ports:
      - 3000:3000
    restart: always
    networks:
      - webnetwork
      - dbnetwork
  nginx:
    image: nginx:latest
    volumes:
      # - media:/media/
      - static:/static/
      - ./nginx/:/etc/nginx/conf.d/

      # - ./nginx/${RTE}/conf.d:/etc/nginx/conf.d/sarahisabella.info.conf
      # - ./certs/:/etc/letsencrypt/
      # - static:/static/
      # - media:/media/
    ports:
      - 443:443
      - 80:80
    depends_on:
      - website
    networks:
      - webnetwork

volumes:
  postgres_data:
  media:
  static:

networks:
  dbnetwork:
  webnetwork:
