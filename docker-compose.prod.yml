--- # yamllint disable-line
version: "3.9"

services:
  database:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=pagemanager
    networks:
      - dbnetwork
    restart: always
  website:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    environment:
      - SITE=website
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=pagemanager
    working_dir: /app/project
    volumes:
      - media:/app/project/media/
      - static:/app/project/static/
      - .:/app/
    command: sh -c 'python manage.py check --deploy && python manage.py collectstatic --noinput && gunicorn project.asgi:application -b 0.0.0.0:8080 -k uvicorn.workers.UvicornWorker' # yamllint disable-line
    ports:
      - "8002:8000"
      - "8080:8080"
    depends_on:
      - database
      - assets
    restart: always
    links:
      - database:database
    networks:
      - dbnetwork
      - webnetwork
  # cms:
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile
  #   environment:
  #     - SITE=cms
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=password
  #     - POSTGRES_DB=pagemanager
  #   working_dir: /app/project
  #   volumes:
  #     - media:/app/project/media/
  #     - static:/app/project/static/
  #     - .:/app/
  #   command: sh -c '' # yamllint disable-line
  #   ports:
  #     - "8001:8000"
  #   depends_on:
  #     - database
  #     - assets
  #   links:
  #     - database:database
  #   restart: always
  #   networks:
  #     - dbnetwork
  #     - webnetwork
  assets:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    environment:
      - SITE=website
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=pagemanager
    working_dir: /app
    volumes:
      - media:/app/project/media/
      - static:/app/project/static/
      - .:/app/
    command: sh -c 'npm run dev'
    ports:
      - 3000:3000
    restart: always
    networks:
      - webnetwork
      - dbnetwork
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/prod/conf.d:/etc/nginx/conf.d/sarahisabella.info.conf
      # - ./certs/:/etc/letsencrypt/
      - static:/static/
      - media:/media/
    ports:
      - 443:443
      - 80:80
    depends_on:
      - website
    networks:
      - webnetwork

volumes:
  postgres_data:
  media:
  static:

networks:
  dbnetwork:
  webnetwork:
